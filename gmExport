function exportAndTransformStorageKey(key = 'wallet_mark_multichain', storageType = 'localStorage', fileName = 'wallet_mark_multichain.txt') {
  try {
    const storage = storageType === 'localStorage' ? localStorage : sessionStorage;
    const data = storage.getItem(key);
    if (data === null) {
      console.error(`Error: Key "${key}" not found in ${storageType}.`);
      return;
    }
    let parsedData;
    try {
      parsedData = JSON.parse(data);
    } catch (e) {
      console.error(`Error: "${key}" is not valid JSON.`, e.message);
      return;
    }
    let formattedData = '';
    for (const chain in parsedData) {
      if (parsedData[chain] && typeof parsedData[chain] === 'object') {
        for (const address in parsedData[chain]) {
          const label = parsedData[chain][address];
          formattedData += `${address}:${label}\n`;
        }
      }
    }
    if (!formattedData) {
      console.warn('Warning: No valid wallet data found to export.');
      return;
    }
    console.log(`Formatted content of "${key}":\n${formattedData}`);
    const blob = new Blob([formattedData], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = fileName;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    console.log(`Successfully exported "${key}" to ${fileName}`);
  } catch (error) {
    console.error('Export failed:', error.message);
  }
}
exportAndTransformStorageKey();
